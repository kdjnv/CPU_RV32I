$date
	Tue Jul 08 14:56:53 2025
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module ALU_unit_tb $end
$var reg 1 ! clk $end
$var reg 1 " isALUimm $end
$var reg 1 # isALUreg $end
$var reg 1 $ isBranch $end
$var reg 8 % funct3oh [7:0] $end
$var reg 7 & funct7 [6:0] $end
$var reg 32 ' rs1 [31:0] $end
$var reg 32 ( rs2 [31:0] $end
$var wire 1 ) result [31] $end
$var wire 1 * result [30] $end
$var wire 1 + result [29] $end
$var wire 1 , result [28] $end
$var wire 1 - result [27] $end
$var wire 1 . result [26] $end
$var wire 1 / result [25] $end
$var wire 1 0 result [24] $end
$var wire 1 1 result [23] $end
$var wire 1 2 result [22] $end
$var wire 1 3 result [21] $end
$var wire 1 4 result [20] $end
$var wire 1 5 result [19] $end
$var wire 1 6 result [18] $end
$var wire 1 7 result [17] $end
$var wire 1 8 result [16] $end
$var wire 1 9 result [15] $end
$var wire 1 : result [14] $end
$var wire 1 ; result [13] $end
$var wire 1 < result [12] $end
$var wire 1 = result [11] $end
$var wire 1 > result [10] $end
$var wire 1 ? result [9] $end
$var wire 1 @ result [8] $end
$var wire 1 A result [7] $end
$var wire 1 B result [6] $end
$var wire 1 C result [5] $end
$var wire 1 D result [4] $end
$var wire 1 E result [3] $end
$var wire 1 F result [2] $end
$var wire 1 G result [1] $end
$var wire 1 H result [0] $end
$var wire 1 I correct $end

$scope task print_state $end
$upscope $end

$scope module ALUtest $end
$var wire 1 J clk $end
$var wire 1 K isALUimm $end
$var wire 1 L isALUreg $end
$var wire 1 M isBranch $end
$var wire 1 N funct3oh [7] $end
$var wire 1 O funct3oh [6] $end
$var wire 1 P funct3oh [5] $end
$var wire 1 Q funct3oh [4] $end
$var wire 1 R funct3oh [3] $end
$var wire 1 S funct3oh [2] $end
$var wire 1 T funct3oh [1] $end
$var wire 1 U funct3oh [0] $end
$var wire 1 V funct7 [6] $end
$var wire 1 W funct7 [5] $end
$var wire 1 X funct7 [4] $end
$var wire 1 Y funct7 [3] $end
$var wire 1 Z funct7 [2] $end
$var wire 1 [ funct7 [1] $end
$var wire 1 \ funct7 [0] $end
$var wire 1 ] rs1 [31] $end
$var wire 1 ^ rs1 [30] $end
$var wire 1 _ rs1 [29] $end
$var wire 1 ` rs1 [28] $end
$var wire 1 a rs1 [27] $end
$var wire 1 b rs1 [26] $end
$var wire 1 c rs1 [25] $end
$var wire 1 d rs1 [24] $end
$var wire 1 e rs1 [23] $end
$var wire 1 f rs1 [22] $end
$var wire 1 g rs1 [21] $end
$var wire 1 h rs1 [20] $end
$var wire 1 i rs1 [19] $end
$var wire 1 j rs1 [18] $end
$var wire 1 k rs1 [17] $end
$var wire 1 l rs1 [16] $end
$var wire 1 m rs1 [15] $end
$var wire 1 n rs1 [14] $end
$var wire 1 o rs1 [13] $end
$var wire 1 p rs1 [12] $end
$var wire 1 q rs1 [11] $end
$var wire 1 r rs1 [10] $end
$var wire 1 s rs1 [9] $end
$var wire 1 t rs1 [8] $end
$var wire 1 u rs1 [7] $end
$var wire 1 v rs1 [6] $end
$var wire 1 w rs1 [5] $end
$var wire 1 x rs1 [4] $end
$var wire 1 y rs1 [3] $end
$var wire 1 z rs1 [2] $end
$var wire 1 { rs1 [1] $end
$var wire 1 | rs1 [0] $end
$var wire 1 } rs2 [31] $end
$var wire 1 ~ rs2 [30] $end
$var wire 1 !! rs2 [29] $end
$var wire 1 "! rs2 [28] $end
$var wire 1 #! rs2 [27] $end
$var wire 1 $! rs2 [26] $end
$var wire 1 %! rs2 [25] $end
$var wire 1 &! rs2 [24] $end
$var wire 1 '! rs2 [23] $end
$var wire 1 (! rs2 [22] $end
$var wire 1 )! rs2 [21] $end
$var wire 1 *! rs2 [20] $end
$var wire 1 +! rs2 [19] $end
$var wire 1 ,! rs2 [18] $end
$var wire 1 -! rs2 [17] $end
$var wire 1 .! rs2 [16] $end
$var wire 1 /! rs2 [15] $end
$var wire 1 0! rs2 [14] $end
$var wire 1 1! rs2 [13] $end
$var wire 1 2! rs2 [12] $end
$var wire 1 3! rs2 [11] $end
$var wire 1 4! rs2 [10] $end
$var wire 1 5! rs2 [9] $end
$var wire 1 6! rs2 [8] $end
$var wire 1 7! rs2 [7] $end
$var wire 1 8! rs2 [6] $end
$var wire 1 9! rs2 [5] $end
$var wire 1 :! rs2 [4] $end
$var wire 1 ;! rs2 [3] $end
$var wire 1 <! rs2 [2] $end
$var wire 1 =! rs2 [1] $end
$var wire 1 >! rs2 [0] $end
$var wire 1 ) result [31] $end
$var wire 1 * result [30] $end
$var wire 1 + result [29] $end
$var wire 1 , result [28] $end
$var wire 1 - result [27] $end
$var wire 1 . result [26] $end
$var wire 1 / result [25] $end
$var wire 1 0 result [24] $end
$var wire 1 1 result [23] $end
$var wire 1 2 result [22] $end
$var wire 1 3 result [21] $end
$var wire 1 4 result [20] $end
$var wire 1 5 result [19] $end
$var wire 1 6 result [18] $end
$var wire 1 7 result [17] $end
$var wire 1 8 result [16] $end
$var wire 1 9 result [15] $end
$var wire 1 : result [14] $end
$var wire 1 ; result [13] $end
$var wire 1 < result [12] $end
$var wire 1 = result [11] $end
$var wire 1 > result [10] $end
$var wire 1 ? result [9] $end
$var wire 1 @ result [8] $end
$var wire 1 A result [7] $end
$var wire 1 B result [6] $end
$var wire 1 C result [5] $end
$var wire 1 D result [4] $end
$var wire 1 E result [3] $end
$var wire 1 F result [2] $end
$var wire 1 G result [1] $end
$var wire 1 H result [0] $end
$var wire 1 I correct $end
$var wire 1 ?! isALU $end
$var wire 1 @! ADD $end
$var wire 1 A! SUB $end
$var wire 1 B! AND $end
$var wire 1 C! OR $end
$var wire 1 D! XOR $end
$var wire 1 E! SLL $end
$var wire 1 F! SRL $end
$var wire 1 G! SRA $end
$var wire 1 H! SLT $end
$var wire 1 I! SLTIU $end
$var wire 1 J! isSigned $end
$var wire 1 K! CP $end
$var wire 1 L! CS $end
$var wire 1 M! EQ $end
$var wire 1 N! LT $end
$var wire 1 O! GE $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
1"
0#
0$
b1 %
b0 &
b1010 '
b11111111111111111111111111111111 (
1H
0G
0F
1E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0I
1?!
1@!
0A!
0B!
0C!
0D!
0E!
0F!
0G!
0H!
0I!
1J!
1K!
0L!
0M!
0N!
1O!
1>!
1=!
1<!
1;!
1:!
19!
18!
17!
16!
15!
14!
13!
12!
11!
10!
1/!
1.!
1-!
1,!
1+!
1*!
1)!
1(!
1'!
1&!
1%!
1$!
1#!
1"!
1!!
1~
1}
0|
1{
0z
1y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
1U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
1K
0J
$end
#5000
1!
1J
#10000
b100 %
b11111111111111111111111111110011 '
b1111111111111111111111111110100 (
0!
0>!
0=!
0;!
0}
1|
0y
1x
1w
1v
1u
1t
1s
1r
1q
1p
1o
1n
1m
1l
1k
1j
1i
1h
1g
1f
1e
1d
1c
1b
1a
1`
1_
1^
1]
0U
1S
0J
1H!
0@!
1L!
1N!
0O!
0E
0K!
#15000
1!
1J
#20000
b1000 %
0!
0S
1R
0J
1I!
0H!
0H
#25000
1!
1J
#30000
b10000 %
b10101010010101011010101001010101 '
b11111111111111110000000000000000 (
0!
0<!
0:!
09!
08!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
1}
0{
1z
0w
0u
0t
0r
0p
0n
0k
0i
0g
0e
0d
0b
0`
0^
0R
1Q
0J
1D!
0I!
0L!
0N!
1O!
1H
1F
1D
1B
1?
1=
1;
19
17
15
13
11
10
1.
1,
1*
1K!
1L!
1N!
0O!
1I
#35000
1!
1J
#40000
b1000000 %
b1111000011110000111100001111 '
b11110000111100001111000011110000 (
0!
1:!
19!
18!
17!
12!
11!
10!
1/!
0.!
0-!
0,!
0+!
0&!
0%!
0$!
0#!
1{
1y
0x
0v
1t
1r
0o
0m
1k
1i
0h
0f
1d
1b
0_
0]
0Q
1O
0J
1C!
0J!
0D!
0L!
1G
1E
1C
1A
1@
1>
1<
1:
18
16
14
12
1/
1-
1+
1)
#45000
1!
1J
#50000
b10000000 %
b11111111111111110000000000000000 '
b1111000011110000111100001111 (
0!
1>!
1=!
1<!
1;!
0:!
09!
08!
07!
16!
15!
14!
13!
02!
01!
00!
0/!
1.!
1-!
1,!
1+!
0*!
0)!
0(!
0'!
1&!
1%!
1$!
1#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0t
0s
0r
0q
1h
1g
1f
1e
1`
1_
1^
1]
0O
1N
0J
1B!
0C!
1L!
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
04
03
02
01
0,
0+
0*
0)
0K!
0I
0N!
1O!
1I
#55000
1!
1J
#60000
0"
1#
b1 %
b111 '
b1000 (
0!
0K
1L
0>!
0=!
0<!
06!
05!
04!
03!
0.!
0-!
0,!
0+!
0&!
0%!
0$!
0#!
1|
1{
1z
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
1U
0N
0J
0B!
1J!
1@!
0L!
1H
1G
1F
1E
08
07
06
05
00
0/
0.
0-
1K!
0I
1L!
1N!
0O!
#65000
1!
1J
#70000
b100000 &
b1000 '
b101 (
0!
1>!
1<!
0;!
0|
0{
0z
1y
1W
0J
0@!
1A!
0F
0E
0K!
0L!
0N!
1O!
#75000
1!
1J
#80000
b0 &
b10 %
b1 '
b11 (
0!
1=!
0<!
1|
0y
0U
1T
0W
0J
1E!
0A!
0H
0G
1E
1K!
1I
1L!
1N!
0O!
#85000
1!
1J
#90000
b100 %
b11111111111111111111111111110011 '
b1111111111111111111111111110100 (
0!
0>!
0=!
1<!
1:!
19!
18!
17!
16!
15!
14!
13!
12!
11!
10!
1/!
1.!
1-!
1,!
1+!
1*!
1)!
1(!
1'!
1&!
1%!
1$!
1#!
1"!
1!!
1~
1{
1x
1w
1v
1u
1t
1s
1r
1q
1p
1o
1n
1m
1l
1k
1j
1i
1h
1g
1f
1e
1d
1c
1b
1a
1`
1_
1^
1]
0T
1S
0J
1H!
0E!
1H
0E
0K!
0I
#95000
1!
1J
#100000
b1000 %
0!
0S
1R
0J
1I!
0H!
0H
#105000
1!
1J
#110000
b100000 %
b11110000000000000000000000000000 '
b100 (
0!
0:!
09!
08!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0|
0{
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c